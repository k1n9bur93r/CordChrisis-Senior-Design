@using CordChrisis.Shared.Models
@inject HttpClient Http;
@inject Blazored.SessionStorage.ISessionStorageService Storage;

    <div class=" mt-4 bg-light rounded dark-text pb-2 w-100">
        <img class="rounded-circle border border-warning border-1 ml-auto IconSize" src="@imagefile" id="pfpDropDown">
        <a class="m-2">Welcome back @baseUserInfo.UserName !</a>
        <div class="m-1 rounded bg-white"><p class="h4 ">Games Played: @stats.TotalGamesPlayed</p></div>
    </div>

@code
{
    [Parameter]
    public string MapMakerID { get; set; }
    [Parameter]
    public Task<string> UserID { get; set; }
    string ID = "Temp";
    bool hasID = false;
    Task<bool> checkGameRunning { get; set; }
    UserStats stats = new UserStats();
    User baseUserInfo = new User();
    string imagefile;

    protected override async void OnInitialized()
    {
        ID = await Storage.GetItemAsync<string>("LoggedIn");
        stats =await Http.PostJsonAsync<UserStats>("User/post",ID);
        baseUserInfo =await Http.PostJsonAsync<User>("UserStats/post",ID);
        imagefile = await Storage.GetItemAsync<string>("UserPFP");
        Console.WriteLine("Current User name "+baseUserInfo.UserName);
        StateHasChanged();

    }
}
