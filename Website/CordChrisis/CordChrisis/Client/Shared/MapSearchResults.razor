@using CordChrisis.Shared.Models
@inject HttpClient Http;
@inject NavigationManager NavigationManager



<div class="card-columns">
    @foreach (Map item in ReturnedMaps)
    {
        <div class="card ">
            <div class="card-header">

                <span class="badge badge-pill badge-primary"> Plays: @item.Plays </span>
                <span class="badge badge-pill badge-success"> Rating: @item.MapRating </span>
                <span class="badge badge-pill badge-warning"> Difficulty: @convertDifficulty(item.Difficulty)</span>
            </div>
            <div class="card-body">
                <p class="card-title h3">@item.Name</p>
                <p class="card-title h5 text-secondary"> Created By: @item.Author</p>              
                    <button class="btn btn-outline-primary btn-shadow btn-block " @onclick="(()=>NavigateToGame(item.ID.ToString()))" style="margin-left:0px!important"> <div class="NeonO">Play!</div></button>
            </div>
            <div class="card-footer">
                <small class="text-muted">Created: @item.CreatedDate.ToString("MM/dd/yyyy")</small>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public List<Map> ReturnedMaps { get; set; }

    string convertDifficulty(int num)
    {
        switch (num)
        {
            case 1:
                return "Easy";
            case 2:
                return "Medium";
            case 3:
                return "Hard";
            case 4:
                return "Ultra";
        }
        return "N/A";
    }
    void NavigateToGame(string ID)
    {
        NavigationManager.NavigateTo("/game/1/"+ID);
    }

}
